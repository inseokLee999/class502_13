컴포넌트 스타일링

p .red{}
=>

1. Sass 사용하기
1) 설명 
- Sass(Syntactically Awesome Style Sheets)(문법적으로 매우 멋진 스타일시트)
- CSS 전처리기로 복잡한 작업을 쉽게 할 수 있도록 해 주고, 스타일 코드의 재활용성을 높여 줄 뿐만 아니라 코드의 가독성을 높여서 유지 보수를 더욱 쉽게 해 줍니다.
- 두 가지 확장자 .scss와 .sass를 지원
	scss-> 세미콜론 사용 가능 , 중괄호 가능
- .sass 확장자는 중괄호({})와 세미콜론(;)을 사용하지 않습니다.
- Sass를 사용하려면 sass라는 라이브러리를 설치해 주어야 합니다. 이 라이브러리는 Sass를 CSS로 변환해 줍니다.

2) 설치 
- yarn add sass

3) utils 함수 분리하기
- 여러 파일에서 사용될 수 있는 Sass 변수 및 믹스인을 다른 파일로 분리하여 작성한 뒤 필요한 곳에서 쉽게 불러와 사용할 수 있습니다.

git add .
git commit -m "...."
yarn eject
-> y

@import("스타일 시트 경로")


2. CSS Module
1) [파일이름]_[클래스 이름]__[해시값] 형태로 자동으로 만들어서 컴포넌트 스타일 클래스 이름이 중첩되는 현상을 방지해 주는 기술
2) .module.css 확장자로 파일을 저장하기만 하면 CSS Module이 적용
코드가 저절로 생성된다.
3. classnames
1) CSS 클래스를 조건부로 설정할 떄 매우 유용한 라이브러리
yarn add classnames
npm i classnames
2) classnames 간략 사용법
3) Sass와 함께 사용하기
	- Sass를 사용할 때도 파일 이름 뒤에 .module.scss 확장자를 사용해 주면 CSS Module로 사용할 수 있습니다.
	
4) CSS Module이 아닌 파일에서 CSS Module 사용하기
	- CSS Module에서 글로벌 클래스를 정의할 때 :global을 사용했던 것처럼 CSS Module이 아닌 .css/.scss 파일에서도 :local을 사용하여 CSS Module을 사용할 수 있습니다.
	
classnames/bind 

3. styled-components
1) 자바스크립트 파일 안에 스타일을 선언하는 방식 / CSS-in-JS라고 부릅니다.
yarn add styled-components
npm i styled

참고)
yarn add sass classnames styled-components

2) styled-components와 일반 classNames를 사용하는 CSS/Sass를 비교했을 때, 가장 큰 장점은 props 값으로 전달해 주는 값을 쉽게 스타일에 적용할 수 있다는 것입니다.
3) Tagged 템플릿 리터럴
	- Tagged 템플릿 리터럴을 사용하면 템플릿 사이사이에 들어가는 자바스크립트 객체나 함수의 원본 값을 그대로 추출할 수 있습니다.
	- styled-components는 이러한 속성을 사용하여 styled-components로 만든 컴포넌트의 props를 스타일 쪽에서 쉽게 조회할 수 있도록 해줍니다.
4) 스타일링된 엘리먼트 만들기
	- styled.div 뒤에 Tagged 템플릿 문법을 통해 스타일을 넣어 주면, 해당 스타일이 적용된 div로 이루어진 리액트 컴포넌트가 생성
	- div가 아닌 button이나 input에 스타일링을 하고 싶다면 styled.button 혹은 styled.input 같은 형태로 뒤에 태그명을 넣어 주면 됩니다.
	- 사용해야 할 태그명이 유동적이거나 특정 컴포넌트 자체에 스타일링할 경우 다음과 같은 형태로 구현할 수 있습니다.

	const StyledLink = styled(Link)`
		color: blue;
	`;
	
5) 스타일에서 props 조회하기

const Box = styled.div`
	/* props로 넣어 준 값을 직접 전달해 줄 수 있습니다. */
	background: ${props => props.color || 'blue'};
	padding: 1rem;
	display: flex;
`;

<Box color="black">...</Box>


6) props에 따른 조건부 스타일링