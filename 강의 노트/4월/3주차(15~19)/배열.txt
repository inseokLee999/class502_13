배열
1. 배열이란?
- 같은 자료형의 반복을 줄이기 위해 사용하는 것 
배열의 특징)
- 같은 자료형(공간의 크기가 동일)
- 물리적인 나열 구조(순차 자료 구조)
- 순서 쉽게 계산  -> [] 인덱스 연산자

2.  배열 선언과 초기화
	자료형[] 배열명 = new 자료형[공간의 갯수];=>[0,...,0]으로 초기화 됨
	자료형 배열명[] = new 자료형[공간의 갯수];
	

3.  배열 사용하기
	- 인덱스 연산자
			[] : 배열 공간의 위치를 계산해 주는 연산자
					
			참고)
				인덱스 : 0부터 시작하는 순서 
	
	- 선언과 동시에 초기화 
	자료형[] 배열명 = new 자료형[] { 값1, 값2, 값3 ....};
	자료형[] 배열명 = { 값1, 값2, 값3 .... };
	
참고)
	기본 자료형 : 초기값 
		정수형 자료형(byte, short, int, long) -> 0
		실수형 자료형(float, double) -> 0.0
		논리형 자료형(boolean) -> false
	
	참조 자료형 
		예) String - 초기값 null 


	참고)
		JDK(Java Development Kit)
			java.util 패키지
				Arrays : 배열의 편의 기능
				Collections : 컬렉션의 편의 기능..
				
			java.util.stream
					Collectors 
					
					
		import java.util.Arrays	
	
4. 전체 배열 길이와 유효한 값
	모든 배열 
		length : 공간의 갯수 
		
5. 향상된 for문과 배열
	
	for (각각 요소 : 배열(컬렉션)) {
	
	}
	
6. 다차원배열
1차원 배열 -> 직선 

2차원 배열 -> 평면
자료형[][] 배열명 = new 자료형[행][열];

3차원 배열 -> 입체 


자료형[][] 배열명 = new 자료형[][] { {값1, 값2, 값3}, {값1, 값2, 값3} };
자료형[][] 배열명 = { {값1, 값2, 값3}, {값1, 값2, 값3} };