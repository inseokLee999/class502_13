Optional 클래스 
- JDK8 
- null에 대한 다양한 처리 방법을 제공하는 클래스 
- Wrapper 클래스 

class Optional<T> {
	...
	private final T value;
	...
}


1. Optional 객체 생성하기
	static Optional<T> of(T t) : t가 null이면 오류 발생 
	static Optional<T> ofNullable(T t) : t가 null이어도 오류  발생 X 
	
2. Optional 객체의 값 가져오기
	
	T get() : null 이면 오류 발생 
	T orElse(T other) : null이 아니면 값 반환, null이면 other 반환 (기본값)
	T orElseGet(Supplier<T ... >  )
		:메서드 (함수) 정의 : 복잡한 반환값을 생성해야 하는 경우
	T orElseThrow() : null이면 예외 발생 NoSuchElementException
	T orElseThrow(Supplier<T ... > ) : 직접 정의한 예외가 발생
	
	참고) API 문서 : 반환값 타입 Optional 인 경우 : 결과가 null일 가능성이 있는 메서드
	
3. OptionalInt, OptionalLong, OptionalDouble
- 기본형을 처리하는 Optional 클래스 
- 오토박싱, 언박싱이 발생 X -> 성능상의 이점 

참고) 
	중간 연산 flatMap : 중첩된 스트림을 -> 일차원적 스트림으로 변환
	
4. 스트림의 최종 연산
- 최종 연산이 호출되어야 중간 연산도 수행, 스트림을 소비 

1) forEach(Consumer<T>)
	-반복 작업 수행
2) allMatch(), anyMatch(), noneMatch(), findFirst(), findAny()

boolean allMatch(Predicate ... ) : 전부 참인 경우 참 
	참고) 자바스크립트 배열 객체 every와 비슷
boolean anyMatch(Predicate ...) : 어떤 것이든 하나라도 참이면 참 
	참고) 자바스크립트 배열 객체 some 과 비슷
boolean noneMatch(Predicate ...) : 전부 거짓일때 참 
T findFirst() : 가장 첫번째 스트림의 요소를 반환 

참고 ) findAny(): 병렬 스트림인 경우 가장 먼저 나오는 요소

3) count(), sum(), average(), max(), min()

long count():요소의 개수 - 일반 스트림(Stream <T>, 기본자료형 스트림(IntStream, LongStream,DoubleStream)
기본 자료형 스트림 (IntStream, LongStream,DoubleStream)
long sum(): 합계
OptionalDouble average():평균
max()- 최대, min() - 최소
4) reduce()


5) collect()
	Collector
	
	java.util.stream.Collectors 
		6) toList(), toSet(), toMap(), toCollection(), toArray()
			- toMap() : 키,값
			- toCollection() : List, Set의 하위 클래스 객체 
			만약 Arraylist 변환? Hashset Treeset 변환?이때는 toCollection사용
			
		7)  joining() : 스트림 요소를 특정 문자로 결합해서 문자열로 생성

8) groupingBy(), partitioningBy()

groupingBy():특정 값을 가지고 그룹
partitioningBy(): 양분(참,거짓)
	Map<Boolean,List<>>
	
flatMap : 중간 연산