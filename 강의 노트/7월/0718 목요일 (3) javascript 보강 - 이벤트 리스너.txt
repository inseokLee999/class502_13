이벤트 처리
1. 이벤트 처리기를 등록하는 방법
	- document 객체에 "on이벤트명" 속성에 이벤트 핸들러 함수를 직접 대입 
	
	- 이벤트 처리기의 문제점
2. 이벤트 리스너를 등록하고 삭제하는 방법
- addEventListener를 사용해서 얻을 수 있는 장점

- addEventListener("이벤트 명", 이벤트 핸들러 함수, 캡쳐링 여부 - false (기본값))
	캡쳐링 여부 - false (기본값) : 버블링 단계에서 이벤트 전파 
				    - true : 캡쳐링 단계에서 이벤트 전파
					
- removeEventListener 메서드로 이벤트 리스너 삭제하기

이벤트 객체
1. 이벤트 객체의 공통 프로퍼티
2. 마우스 이벤트 객체
- 마우스 이벤트 객체에서 좌표를 담당하는 프로퍼티
- mouseenter/mouseover : 하위 요소의 이벤트도 중첩으로 발생
- mouseleave / mouseout : 

3. 키보드 이벤트 객체
keyup :키를 눌렀다 땔때
keypress: 키를 누를 때 계속 이벤트 발생
keydown : 키를 누를 때 이벤트 한번 발생
- 눌러진 키 정보 - keyCode
change : 키보드 이벤트 관련 속성 x - 눌려진 키 정보 X

4. 기타 
select : 값을 선택 하는 경우 -> change

input[type='file']-> 파일 탐색기에서 파일을 선택한 경우 -> change 이벤트 발생
이벤트 전파
1. 이벤트의 단계
1) 캡펴링 단계
2) 타깃 단계 
3) 버블링 단계

2. 이벤트 전파
1) 이벤트 전파 취소하기
stopPropagation() : 이벤트 전파 취소
	- 동일 이벤트에 한해서 전파 취소
2) 이벤트 전파의 일시 정지
stopImmediatePropagation()
	- 발생하는 모든 이벤트 전파 취소
3) 기본 동작 취소하기
preventDefault()

3. 이벤트 리스너 안의 this
- event 
	.target : 중첩되어있는 경우는
	.currentTarget : 이벤트가 바인딩 되어있는 요소 (this 와 동일)
1) 이벤트 리스너 안의 this는 이벤트가 발생한 요소 객체
2) this가 원하는 객체를 가리키도록 설정하는 방법
- bind 메서드를 사용하는 방법
- 익명 함수 안에서 실행하는 방법
- 화살표 함수를 사용하는 방법
- addEventListener의 두 번째 인수로 객체를 넘기는 방법
	- handleEvent 
	객체 안에 handleEvent 를 넣으면 this는 객체 가 된다