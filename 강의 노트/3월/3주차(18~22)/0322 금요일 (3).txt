중첩 반복문
	반복문 안에 반복분
	
2015(ES6+,ES6Next)

1.심벌(symbol)
	1)심벌의 생성
	2)심벌과 문자열 연결하기

2.템플릿 리터럴
``
	1) 문자열 결합 
		+쓰는데 불편
	2) 줄개행
		매터 문자 : 동작
		\n : 줄 개행
		\t : 탭 키 1번
		\b : 백스페이스 키 1번
3. 보간 표현식
	(placeholder)
	
	${변수}
	${연산식}
	${함수호출}
	
객체(Object) - 사물, 대상

1. 객체 리터럴
	- 객체는 이름과 값을 한쌍을 묶은 데이터를 여러개 모은 것
	- 즉, 객체는 데이터 여러개를 하나로 모은 복합 데이터로 연관배열 또는 사전(Diction) 이라고 부릅니다.
	
	{
	이름 : 값;
	이름 : 값;
	이름 : 값;
	이름 : 값;
	}
	이름 -> 속성(property)
	->변수와 동일
	값:: 숫자 문자 논리값 undefined null 객체 전부 값으로 사용 가능
	변수명.속성명; . : 접근
	변수명['속성명']; : 대괄호는 해석
2. 객체 리터럴로 객체 생성하기
	데이터
	CRUD
	create
	read
	update
	delete
	
	수정 : 있는 속성명에 값을 대입하면 변경이 된다.

3. 프로퍼티 추가와 삭제
추가 : 없는 속성명에 속성값을 넣으면 추가

4. in 연산자로 프로퍼티가 있는지 확인하기
	in : 객체의 속셩명의 존재유무 체크
	
	for ... in 구문 : 객체의 속성명을 가지고 반복
	
	for (var key in person){
    console.log(key);
    console.log(person[key]);
}
5.메서드
	-객체 안에 정의된 함수
	
6. 객체는 참조 타입
	객체 타입의 값을 변수에 대입하면 그 변수에는 객체의 참조(메모리에서의 위치 정보)가 저장됩니다.
	메모리
		데이터 영역
		스택 영역 - 함수전용메모리
		힙 영역 - 객체 전용 메모리

7. 함수
	일련의 처리를 하나로 모아 언제든 호출할 수 있도록 만들어 놓은것
	수학 함수와 비슷
	함수의 입력 값을 인수, 함수의 출력 값을 반환값
	
	함수 선언문으로 함수 정의하기
	function square(x) {    
	var result = x * x; 
	
	return result; 
}  