{"ast":null,"code":"var _jsxFileName = \"D:\\\\inseok\\\\2. \\uC2E4\\uBB34 \\uD504\\uB85C\\uC81D\\uD2B8 (P-1)\\\\exam03\\\\src\\\\containers\\\\TodoContainers.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport AddTodo from '../components/AddTodo';\nimport TodoList from '../components/TodoList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialValue = [{\n  id: 1,\n  title: '할일 1',\n  done: true\n}, {\n  id: 2,\n  title: '할일 2',\n  done: false\n}, {\n  id: 3,\n  title: '할일 3',\n  done: false\n}];\nlet submitFunc;\nconst TodoContainer = () => {\n  _s();\n  //업데이트시 매번 호출\n  const [items, setItems] = useState(initialValue);\n  const [todo, setTodo] = useState('');\n  const [message, setMessage] = useState('');\n  let id = useRef(4); //할일 id\n  const onSubmit = e => {\n    e.preventDefault();\n    if (!todo.trim()) {\n      setMessage('할일을 입력하세요');\n      return;\n    }\n    //입력시 새로운 item리스트 만들고\n    const newItems = items.concat({\n      id: id.current,\n      title: todo.trim(),\n      done: false\n    });\n    //newitems으로 할당\n    setItems(newItems);\n    id.current++;\n    //입력시 창 초기화\n    setTodo('');\n    setMessage('');\n  };\n  console.log('같은 함수 :?', submitFunc === onSubmit);\n  //할일 입력시 todo 변경\n  const onChange = e => setTodo(e.currentTarget.value);\n\n  //할일 목록 완료 여부 토글\n  const onToggle = id => {\n    /*\r\n    const newItems = items.map((item) =>\r\n      item.id === id ? { ...item, done: !item.done } : item,\r\n    );\r\n    setItems(newItems);\r\n    */\n\n    setItems(items.map(inseok => inseok.id === id ? {\n      ...inseok,\n      done: !inseok.done\n    } : item //item의 id값이랑 지금 들어온 값의 id값 이랑 같은거만 Toggle하고 나머지는 그냥 item을 반환\n    ));\n  };\n  const onRemove = id => {\n    const newItems = items.filter(item => item.id !== id);\n    setItems(newItems);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n      onSubmit: onSubmit,\n      onChange: onChange,\n      todo: todo,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      items: items,\n      onToggle: onToggle,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoContainer, \"zel5fppLpRg7TK1MIWr43aUCBJU=\");\n_c = TodoContainer;\nexport default TodoContainer;\nvar _c;\n$RefreshReg$(_c, \"TodoContainer\");","map":{"version":3,"names":["useState","useRef","AddTodo","TodoList","jsxDEV","_jsxDEV","Fragment","_Fragment","initialValue","id","title","done","submitFunc","TodoContainer","_s","items","setItems","todo","setTodo","message","setMessage","onSubmit","e","preventDefault","trim","newItems","concat","current","console","log","onChange","currentTarget","value","onToggle","map","inseok","item","onRemove","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/inseok/2. 실무 프로젝트 (P-1)/exam03/src/containers/TodoContainers.js"],"sourcesContent":["import { useState, useRef } from 'react';\r\nimport AddTodo from '../components/AddTodo';\r\nimport TodoList from '../components/TodoList';\r\n\r\nconst initialValue = [\r\n  {\r\n    id: 1,\r\n    title: '할일 1',\r\n    done: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: '할일 2',\r\n    done: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: '할일 3',\r\n    done: false,\r\n  },\r\n];\r\nlet submitFunc;\r\nconst TodoContainer = () => {\r\n  //업데이트시 매번 호출\r\n  const [items, setItems] = useState(initialValue);\r\n  const [todo, setTodo] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  let id = useRef(4); //할일 id\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!todo.trim()) {\r\n      setMessage('할일을 입력하세요');\r\n      return;\r\n    }\r\n    //입력시 새로운 item리스트 만들고\r\n    const newItems = items.concat({\r\n      id: id.current,\r\n      title: todo.trim(),\r\n      done: false,\r\n    });\r\n    //newitems으로 할당\r\n    setItems(newItems);\r\n    id.current++;\r\n    //입력시 창 초기화\r\n    setTodo('');\r\n    setMessage('');\r\n  };\r\n  console.log('같은 함수 :?', submitFunc === onSubmit);\r\n  //할일 입력시 todo 변경\r\n  const onChange = (e) => setTodo(e.currentTarget.value);\r\n\r\n  //할일 목록 완료 여부 토글\r\n  const onToggle = (id) => {\r\n    /*\r\n    const newItems = items.map((item) =>\r\n      item.id === id ? { ...item, done: !item.done } : item,\r\n    );\r\n    setItems(newItems);\r\n    */\r\n\r\n    setItems(\r\n      items.map(\r\n        (inseok) => (inseok.id === id ? { ...inseok, done: !inseok.done } : item), //item의 id값이랑 지금 들어온 값의 id값 이랑 같은거만 Toggle하고 나머지는 그냥 item을 반환\r\n      ),\r\n    );\r\n  };\r\n  const onRemove = (id) => {\r\n    const newItems = items.filter((item) => item.id !== id);\r\n    setItems(newItems);\r\n  };\r\n  return (\r\n    <>\r\n      <AddTodo\r\n        onSubmit={onSubmit}\r\n        onChange={onChange}\r\n        todo={todo}\r\n        message={message}\r\n      />\r\n      <TodoList items={items} onToggle={onToggle} onRemove={onRemove} />\r\n    </>\r\n  );\r\n};\r\nexport default TodoContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}